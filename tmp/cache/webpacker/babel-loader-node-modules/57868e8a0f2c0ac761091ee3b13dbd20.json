{"ast":null,"code":"import Chart from \"chart.js\";\nvar chart;\nexport var InitChart = function InitChart() {\n  // destroy previous chart if present\n  if (chart) {\n    chart.destroy();\n    chart = null;\n  }\n\n  var container = document.getElementById('chartContainer');\n  if (!container) return; // container.style.width  = `${container.parentElement.clientWidth}px`;\n  // container.style.height = `${container.parentElement.clientHeight}px`;\n\n  container.innerHTML = \"<canvas id=\\\"vente_chart\\\"</canvas>\";\n  var currentMonthTurnover = container.dataset.currentMonthOrder;\n  setTimeout(function () {\n    var ctx = document.getElementById('vente_chart').getContext('2d');\n    var chart = new Chart(ctx, {\n      // The type of chart we want to create\n      type: 'line',\n      // The data for our dataset\n      data: {\n        labels: ['Janvier', 'Février', 'Mars', 'Avril'],\n        datasets: [{\n          label: '2019',\n          borderColor: 'rgb(255, 99, 132)',\n          data: [200, 300, 440, 470],\n          fill: false,\n          lineTension: 0\n        }, {\n          label: '2020',\n          borderColor: 'rgb(118, 190, 208)',\n          data: [180, 320, 518, currentMonthTurnover],\n          fill: false,\n          lineTension: 0\n        }]\n      },\n      // Configuration options go here\n      options: {\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }]\n        }\n      }\n    });\n  }, 0);\n};","map":{"version":3,"sources":["/Users/VIG/code/VincentGuilleux/goutsdfruits/app/javascript/components/initchart.js"],"names":["Chart","chart","InitChart","destroy","container","document","getElementById","innerHTML","currentMonthTurnover","dataset","currentMonthOrder","setTimeout","ctx","getContext","type","data","labels","datasets","label","borderColor","fill","lineTension","options","scales","xAxes","gridLines","drawOnChartArea","yAxes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,IAAIC,KAAJ;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B;AACA,MAAID,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACE,OAAN;AACAF,IAAAA,KAAK,GAAG,IAAR;AACD;;AAED,MAAMG,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAlB;AACA,MAAI,CAACF,SAAL,EAAgB,OARa,CAY7B;AACA;;AACAA,EAAAA,SAAS,CAACG,SAAV;AACA,MAAMC,oBAAoB,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,iBAA/C;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACf,QAAMC,GAAG,GAAGP,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCO,UAAvC,CAAkD,IAAlD,CAAZ;AAEA,QAAMZ,KAAK,GAAG,IAAID,KAAJ,CAAUY,GAAV,EAAe;AAC3B;AACAE,MAAAA,IAAI,EAAE,MAFqB;AAI3B;AACAC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,MAAvB,EAA+B,OAA/B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,WAAW,EAAE,mBAFf;AAGEJ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAHR;AAIEK,UAAAA,IAAI,EAAE,KAJR;AAKEC,UAAAA,WAAW,EAAE;AALf,SADQ,EAQR;AACEH,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,WAAW,EAAE,oBAFf;AAGEJ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgBP,oBAAhB,CAHR;AAIEY,UAAAA,IAAI,EAAE,KAJR;AAKEC,UAAAA,WAAW,EAAE;AALf,SARQ;AAFN,OALqB;AAwB3B;AACAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,SAAS,EAAE;AACTC,cAAAA,eAAe,EAAE;AADR;AADL,WAAD,CADD;AAMNC,UAAAA,KAAK,EAAE,CAAC;AACNF,YAAAA,SAAS,EAAE;AACTC,cAAAA,eAAe,EAAE;AADR;AADL,WAAD;AAND;AADD;AAzBkB,KAAf,CAAd;AAwCD,GA3CS,EA2CP,CA3CO,CAAV;AA4CD,CA7DM","sourcesContent":["import Chart from \"chart.js\"\n\nlet chart;\n\nexport const InitChart = () => {\n  // destroy previous chart if present\n  if (chart) {\n    chart.destroy();\n    chart = null;\n  }\n\n  const container = document.getElementById('chartContainer');\n  if (!container) return;\n\n\n\n  // container.style.width  = `${container.parentElement.clientWidth}px`;\n  // container.style.height = `${container.parentElement.clientHeight}px`;\n  container.innerHTML = `<canvas id=\"vente_chart\"</canvas>`;\n  const currentMonthTurnover = container.dataset.currentMonthOrder\n\n  setTimeout(() => {\n    const ctx = document.getElementById('vente_chart').getContext('2d');\n\n    const chart = new Chart(ctx, {\n      // The type of chart we want to create\n      type: 'line',\n\n      // The data for our dataset\n      data: {\n        labels: ['Janvier', 'Février', 'Mars', 'Avril'],\n        datasets: [\n          {\n            label: '2019',\n            borderColor: 'rgb(255, 99, 132)',\n            data: [200, 300, 440, 470],\n            fill: false,\n            lineTension: 0\n          },\n          {\n            label: '2020',\n            borderColor: 'rgb(118, 190, 208)',\n            data: [180, 320, 518, currentMonthTurnover],\n            fill: false,\n            lineTension: 0\n          }\n        ]\n      },\n      // Configuration options go here\n      options: {\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }]\n        }\n      }\n    });\n  }, 0);\n};\n"]},"metadata":{},"sourceType":"module"}